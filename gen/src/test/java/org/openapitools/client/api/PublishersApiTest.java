/*
 * BoockStore
 * Special API for BookStore
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: arsenulykbekov9@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Publisher;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PublishersApi
 */
@Ignore
public class PublishersApiTest {

    private final PublishersApi api = new PublishersApi();

    
    /**
     * Add a new publishers to the store
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addPublishersTest() throws ApiException {
        Publisher body = null;
        api.addPublishers(body);

        // TODO: test validations
    }
    
    /**
     * Deletes a publishers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePublishersTest() throws ApiException {
        Long publisherId = null;
        api.deletePublishers(publisherId);

        // TODO: test validations
    }
    
    /**
     * Find publishers by ID
     *
     * Returns a single pet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getpublisherByIdTest() throws ApiException {
        Long publisherId = null;
        Publisher response = api.getpublisherById(publisherId);

        // TODO: test validations
    }
    
    /**
     * Update an existing publishers
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePublishersTest() throws ApiException {
        Publisher body = null;
        api.updatePublishers(body);

        // TODO: test validations
    }
    
    /**
     * Updates a publishers in the store with form data
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePublishersWithFormTest() throws ApiException {
        Long publisherId = null;
        String name = null;
        api.updatePublishersWithForm(publisherId, name);

        // TODO: test validations
    }
    
}
